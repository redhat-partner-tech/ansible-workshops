---
- name: SSL cert block
  block:
    - name: make sure Ansible Tower is online before changing tower base URL
      service:
        name: ansible-tower.service
        state: started
      register: start_tower
      until: start_tower is not failed
      retries: 5

    # directions found here https://certbot.eff.org/lets-encrypt/centosrhel8-other
    - name: install certbot if not already installed
      dnf:
        name: certbot
        state: present
        disable_gpg_check: true

    - name: change ansible tower base URL
      awx.awx.tower_settings:
        name: TOWER_URL_BASE
        value: "https://{{ dns_name }}"
        tower_verify_ssl: false
        tower_host: https://localhost
        tower_username: admin
        tower_password: "{{ admin_password }}"
      register: change_base_url
      until: change_base_url is not failed
      retries: 10

    # https://docs.ansible.com/ansible-tower/latest/html/administration/init_script.html
    - name: make sure Ansible Tower is stopped
      service:
        name: ansible-tower.service
        state: stopped
      register: stop_tower
      until: stop_tower is not failed
      retries: 5

    # If this fails check out status of certbot: https://letsencrypt.status.io/
    - name: ISSUE CERT
      shell: certbot certonly --no-bootstrap --standalone -d {{ dns_name }} --email ansible-network@redhat.com --noninteractive --agree-tos
      register: issue_cert
      until: issue_cert is not failed
      retries: 5

    - name: Move SSL Key
      copy:
        remote_src: true
        src: "/etc/letsencrypt/live/{{ dns_name }}/privkey.pem"
        dest: /etc/tower/tower.key

    - name: Retrieve Specific SSL Cert
      slurp:
        src: "/etc/letsencrypt/live/{{ dns_name }}/cert.pem"
      register: intermediate_cert

    - name: Combine Specific and intermediate Cert
      template:
        src: combined_cert.j2
        dest: /etc/tower/tower.cert
  rescue:
    - name: no SSL cert for Ansible Tower
      debug:
        msg: "SSL cert problem - no cert applied"
  always:
    # Turn on Ansible Controller if successful
    - name: make sure Ansible Tower is started
      service:
        name: ansible-tower.service
        state: started
      register: start_tower
      until: start_tower is not failed
      retries: 5
